services:

  app:
    container_name: app
    build: .
    entrypoint: sh src/entrypoint.sh
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:17.4-alpine
    container_name: db
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U$$POSTGRES_USER -d$$POSTGRES_DB"]
      interval: 3s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    # image: redis:7.4.2-alpine
    # build: deploy/redis
    container_name: redis
    build: ./deploy/redis
    env_file:
      - .env
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  db-data:
  redis-data:
